// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace bpkg
{
  // pkg_build_pkg_options
  //

  inline const bool& pkg_build_pkg_options::
  upgrade () const
  {
    return this->upgrade_;
  }

  inline bool& pkg_build_pkg_options::
  upgrade ()
  {
    return this->upgrade_;
  }

  inline void pkg_build_pkg_options::
  upgrade(const bool& x)
  {
    this->upgrade_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  patch () const
  {
    return this->patch_;
  }

  inline bool& pkg_build_pkg_options::
  patch ()
  {
    return this->patch_;
  }

  inline void pkg_build_pkg_options::
  patch(const bool& x)
  {
    this->patch_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  immediate () const
  {
    return this->immediate_;
  }

  inline bool& pkg_build_pkg_options::
  immediate ()
  {
    return this->immediate_;
  }

  inline void pkg_build_pkg_options::
  immediate(const bool& x)
  {
    this->immediate_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  recursive () const
  {
    return this->recursive_;
  }

  inline bool& pkg_build_pkg_options::
  recursive ()
  {
    return this->recursive_;
  }

  inline void pkg_build_pkg_options::
  recursive(const bool& x)
  {
    this->recursive_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  upgrade_immediate () const
  {
    return this->upgrade_immediate_;
  }

  inline bool& pkg_build_pkg_options::
  upgrade_immediate ()
  {
    return this->upgrade_immediate_;
  }

  inline void pkg_build_pkg_options::
  upgrade_immediate(const bool& x)
  {
    this->upgrade_immediate_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  patch_immediate () const
  {
    return this->patch_immediate_;
  }

  inline bool& pkg_build_pkg_options::
  patch_immediate ()
  {
    return this->patch_immediate_;
  }

  inline void pkg_build_pkg_options::
  patch_immediate(const bool& x)
  {
    this->patch_immediate_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  upgrade_recursive () const
  {
    return this->upgrade_recursive_;
  }

  inline bool& pkg_build_pkg_options::
  upgrade_recursive ()
  {
    return this->upgrade_recursive_;
  }

  inline void pkg_build_pkg_options::
  upgrade_recursive(const bool& x)
  {
    this->upgrade_recursive_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  patch_recursive () const
  {
    return this->patch_recursive_;
  }

  inline bool& pkg_build_pkg_options::
  patch_recursive ()
  {
    return this->patch_recursive_;
  }

  inline void pkg_build_pkg_options::
  patch_recursive(const bool& x)
  {
    this->patch_recursive_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  dependency () const
  {
    return this->dependency_;
  }

  inline bool& pkg_build_pkg_options::
  dependency ()
  {
    return this->dependency_;
  }

  inline void pkg_build_pkg_options::
  dependency(const bool& x)
  {
    this->dependency_ = x;
  }

  inline const bool& pkg_build_pkg_options::
  keep_out () const
  {
    return this->keep_out_;
  }

  inline bool& pkg_build_pkg_options::
  keep_out ()
  {
    return this->keep_out_;
  }

  inline void pkg_build_pkg_options::
  keep_out(const bool& x)
  {
    this->keep_out_ = x;
  }

  // pkg_build_options
  //

  inline const bool& pkg_build_options::
  yes () const
  {
    return this->yes_;
  }

  inline bool& pkg_build_options::
  yes ()
  {
    return this->yes_;
  }

  inline void pkg_build_options::
  yes(const bool& x)
  {
    this->yes_ = x;
  }

  inline const string& pkg_build_options::
  for_ () const
  {
    return this->for__;
  }

  inline string& pkg_build_options::
  for_ ()
  {
    return this->for__;
  }

  inline void pkg_build_options::
  for_(const string& x)
  {
    this->for__ = x;
  }

  inline bool pkg_build_options::
  for__specified () const
  {
    return this->for__specified_;
  }

  inline void pkg_build_options::
  for__specified(bool x)
  {
    this->for__specified_ = x;
  }

  inline const bool& pkg_build_options::
  keep_unused () const
  {
    return this->keep_unused_;
  }

  inline bool& pkg_build_options::
  keep_unused ()
  {
    return this->keep_unused_;
  }

  inline void pkg_build_options::
  keep_unused(const bool& x)
  {
    this->keep_unused_ = x;
  }

  inline const bool& pkg_build_options::
  update_dependent () const
  {
    return this->update_dependent_;
  }

  inline bool& pkg_build_options::
  update_dependent ()
  {
    return this->update_dependent_;
  }

  inline void pkg_build_options::
  update_dependent(const bool& x)
  {
    this->update_dependent_ = x;
  }

  inline const bool& pkg_build_options::
  leave_dependent () const
  {
    return this->leave_dependent_;
  }

  inline bool& pkg_build_options::
  leave_dependent ()
  {
    return this->leave_dependent_;
  }

  inline void pkg_build_options::
  leave_dependent(const bool& x)
  {
    this->leave_dependent_ = x;
  }

  inline const bool& pkg_build_options::
  configure_only () const
  {
    return this->configure_only_;
  }

  inline bool& pkg_build_options::
  configure_only ()
  {
    return this->configure_only_;
  }

  inline void pkg_build_options::
  configure_only(const bool& x)
  {
    this->configure_only_ = x;
  }

  inline const bool& pkg_build_options::
  print_only () const
  {
    return this->print_only_;
  }

  inline bool& pkg_build_options::
  print_only ()
  {
    return this->print_only_;
  }

  inline void pkg_build_options::
  print_only(const bool& x)
  {
    this->print_only_ = x;
  }

  inline const string& pkg_build_options::
  plan () const
  {
    return this->plan_;
  }

  inline string& pkg_build_options::
  plan ()
  {
    return this->plan_;
  }

  inline void pkg_build_options::
  plan(const string& x)
  {
    this->plan_ = x;
  }

  inline bool pkg_build_options::
  plan_specified () const
  {
    return this->plan_specified_;
  }

  inline void pkg_build_options::
  plan_specified(bool x)
  {
    this->plan_specified_ = x;
  }

  inline const bool& pkg_build_options::
  no_fetch () const
  {
    return this->no_fetch_;
  }

  inline bool& pkg_build_options::
  no_fetch ()
  {
    return this->no_fetch_;
  }

  inline void pkg_build_options::
  no_fetch(const bool& x)
  {
    this->no_fetch_ = x;
  }

  inline const bool& pkg_build_options::
  fetch_shallow () const
  {
    return this->fetch_shallow_;
  }

  inline bool& pkg_build_options::
  fetch_shallow ()
  {
    return this->fetch_shallow_;
  }

  inline void pkg_build_options::
  fetch_shallow(const bool& x)
  {
    this->fetch_shallow_ = x;
  }
}

// Begin epilogue.
//
//
// End epilogue.
